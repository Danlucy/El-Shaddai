import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:riverpod_annotation/riverpod_annotation.dart';

part 'router.g.dart';

final GlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();

// Your GoRouter setup
final goRouterProvider = Provider<GoRouter>((ref) {
  // We'll leave the redirect logic commented out for now
  // to avoid conflicts with the new route structure.
  return GoRouter(
    navigatorKey: navigatorKey,
    routes: $appRoutes, // $appRoutes is generated by the builder
    initialLocation: '/',
  );
});

@TypedShellRoute<ShellRoute>(
  // The ShellRoute's builder defines the persistent UI.
  routes: <TypedRoute<RouteData>>[
    // HomeRoute is a nested route inside the ShellRoute.
    TypedGoRoute<HomeRoute>(
      path: '/',
      name: 'home',
    ),
  ],
)
class ShellRoute extends ShellRouteData {
  const ShellRoute();

  // This is the builder for your shell.
  // The `child` parameter is the widget of the current nested route.
  @override
  Widget build(BuildContext context, GoRouterState state) {
    // You must import the ShellRoute's widget from its file
    return const Placeholder(); // Replace with ScaffoldWithNavBar(child: child)
  }
}

// ðŸ“Œ Your HomeRoute implementation
class HomeRoute extends GoRouteData {
  const HomeRoute();

  @override
  Widget build(BuildContext context, GoRouterState state) {
    return const Placeholder(); // Replace with your HomePage widget
  }
}
